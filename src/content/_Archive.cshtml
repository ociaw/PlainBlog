<div class="archive">
@{
    var docs = Model.DocumentList(Keys.PageDocuments);
    var monthlyDocs = docs.GroupBy(d =>
    {
        DateTime dt = d.Get<DateTime>(BlogKeys.Published);
        return new DateTime(dt.Year, dt.Month, 1);
    });
}
@foreach(IGrouping<DateTime, IDocument> monthDocs in monthlyDocs)
{
    <section class="archive-month">
        <h2>@monthDocs.Key.ToString("y")</h2>
    @foreach(IDocument post in monthDocs)
    {
        DateTime time = post.Get<DateTime>(BlogKeys.Published);
        String timeFormat = "yyyy-MM-dd";
        <div class="archive-post">
            <div class="post-meta"><time datetime="@(time.ToString(timeFormat))">@(time.ToString(timeFormat))</time></div>
            <div class="post-title">
                <a href="@Context.GetLink(post)">@post.WithoutSettings.String(BlogKeys.Title)</a>
            </div>
        </div>
    }
    </section>
}
</div>

@if(Model.Bool(Keys.HasPreviousPage)) {
    <div class="button-link">
        <a href="@(Context.GetLink(Model.Document(Keys.PreviousPage)))"><span aria-hidden="true">&larr;</span> Newer</a> 
    </div>
}

@if(Model.Bool(Keys.HasNextPage)) {
    <div class="button-link">
        <a href="@(Context.GetLink(Model.Document(Keys.NextPage)))">Older <span aria-hidden="true">&rarr;</span></a>
    </div>
}